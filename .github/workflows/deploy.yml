name: Deploy Tapal REST API to Vultr

on:
  push:
    branches:
      - main # Deploy when code is pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p 2828 64.176.57.179 >> ~/.ssh/known_hosts
          ls -la ~/.ssh/  # Debugging step

      - name: Deploy Docker Containers on Tapwal VPS
        run: |
          echo "Starting Deployment via SSH..."
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p 2828 gudofabi@64.176.57.179 << 'EOF'
          echo "Connected to VPS"

          # Navigate to the project directory
          cd /home/gudofabi/tapal-api-app

          # Pull latest code from GitHub
          echo "Pulling latest code from GitHub..."
          git pull origin main

          # Check if tapwal containers are running before stopping/removing
          echo "Checking if tapwal containers exist..."
          if [ "$(docker ps -q -f name=tapwal_app)" ]; then
            echo "Stopping tapwal_app..."
            docker stop tapwal_app
            docker rm tapwal_app
          else
            echo "tapwal_app is not running."
          fi

          if [ "$(docker ps -q -f name=tapwal_nginx)" ]; then
            echo "Stopping tapwal_nginx..."
            docker stop tapwal_nginx
            docker rm tapwal_nginx
          else
            echo "tapwal_nginx is not running."
          fi

          # Remove old images to avoid caching issues
          echo "Pruning old Docker images..."
          docker system prune -a -f

          # Rebuild and restart only the Tapwal containers
          echo "Rebuilding and starting Tapwal containers..."
          docker compose up -d --build app nginx

          # Wait for containers to start
          sleep 5

          # Clear Laravel caches
          echo "Clearing Laravel caches..."
          if [ "$(docker ps -q -f name=tapwal_app)" ]; then
            docker exec -it tapwal_app php artisan config:clear
            docker exec -it tapwal_app php artisan cache:clear
            docker exec -it tapwal_app php artisan route:clear
            docker exec -it tapwal_app php artisan view:clear
          else
            echo "tapwal_app is not running, skipping cache clearing."
          fi

          # Verify running containers
          echo "Checking running containers..."
          docker ps

          # Show Laravel logs (optional for debugging)
          if [ "$(docker ps -q -f name=tapwal_app)" ]; then
            echo "Showing latest Laravel logs..."
            docker logs tapwal_app --tail=50
          else
            echo "tapwal_app is not running, no logs to show."
          fi

          echo "Deployment completed successfully."
          EOF
